[{"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\index.js":"1","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\App.js":"2","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\reportWebVitals.js":"3","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\Firebase.js":"4","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatList.js":"5","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\FindNew.js":"6","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Footer.js":"7","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Profile.js":"8","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom.js":"9","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignIn.js":"10","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignOut.js":"11","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatMessage.js":"12","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignUp.js":"13","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatPerson.js":"14","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom2.js":"15"},{"size":517,"mtime":1610944178224,"results":"16","hashOfConfig":"17"},{"size":2206,"mtime":1611445755450,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1610944178226,"results":"19","hashOfConfig":"17"},{"size":947,"mtime":1611100221925,"results":"20","hashOfConfig":"17"},{"size":1412,"mtime":1611191654665,"results":"21","hashOfConfig":"17"},{"size":1544,"mtime":1611100335571,"results":"22","hashOfConfig":"17"},{"size":707,"mtime":1611447821479,"results":"23","hashOfConfig":"17"},{"size":431,"mtime":1611100863737,"results":"24","hashOfConfig":"17"},{"size":1198,"mtime":1611191673457,"results":"25","hashOfConfig":"17"},{"size":2084,"mtime":1611100356274,"results":"26","hashOfConfig":"17"},{"size":241,"mtime":1611100391885,"results":"27","hashOfConfig":"17"},{"size":529,"mtime":1611100291435,"results":"28","hashOfConfig":"17"},{"size":4376,"mtime":1611023489907,"results":"29","hashOfConfig":"17"},{"size":1957,"mtime":1611172748022,"results":"30","hashOfConfig":"17"},{"size":1457,"mtime":1611178785610,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hyjv0o",{"filePath":"35","messages":"36","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"34"},"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\index.js",[],["72","73"],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\App.js",["74","75","76","77","78","79","80"],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\reportWebVitals.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\Firebase.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatList.js",["81","82","83","84","85","86","87","88","89"],"import React, { withRouter, useState, useEffect } from 'react'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport firebase, { firestore, auth } from '../Firebase.js';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatPerson from './ChatPerson.js'\r\nimport ChatRoom2 from './ChatRoom2.js';\r\n\r\n\r\nconst ChatList = () => {\r\n\r\n    const query = firestore.collection('users').doc(auth.currentUser.uid).collection('strangers').orderBy('channelID').limitToLast(10);\r\n    //console.log(query);\r\n    const [channelidArr] = useCollectionData(query, { idField: 'id' });\r\n    //console.log(channelIDs);\r\n    // if(channelIDs)\r\n    //     console.log(channelIDs[0].channelID);\r\n\r\n    return (\r\n        <div>\r\n            {channelidArr && channelidArr.map(channelid =>\r\n                <div>\r\n                    <Link to={\"/direct/\" + channelid.channelID} key={channelid}>\r\n                        {channelid.channelID}\r\n                    </Link>\r\n                    <br />\r\n                </div>)}\r\n            {channelidArr && channelidArr.map(channelid =>\r\n                <Route path={\"/direct/\" + channelid.channelID} key={channelid}>\r\n                    <ChatRoom2 channelid={channelid.channelID} />\r\n                </Route>)}\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ChatList;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\FindNew.js",["90"],"import React, { useState, useEffect } from 'react'\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\n\r\nconst FindNew = () => {\r\n    firestore.collection('users')\r\n\r\n    const messagesRef = firestore.collection('users');\r\n    const query = messagesRef.orderBy('name');\r\n    const [users] = useCollectionData(query, { idField: 'id' });\r\n    const [foundUser, setFoundUser] = useState('no one');\r\n    const onClick = () => {\r\n        if (users) {\r\n            setFoundUser(users[0].name);\r\n            var initConversation = firebase.functions().httpsCallable('initConversation');\r\n            initConversation({ uidA: auth.currentUser.uid, uidB: users[0].id });\r\n        } else {\r\n            setFoundUser(\"Matching\");\r\n        }\r\n\r\n        // combinedID = uidA > uidB ? uidB+uidA : uidA+uidB\r\n        // firestore.collection('messages').doc(combinedID).collection('chats').add({\r\n        //     text: \"hi\",\r\n        //     createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        //     uid: auth.currentUser.uid,\r\n        //     url: \"auth.currentUser.uid\"\r\n        // });\r\n\r\n        // firestore.collection('users').doc(combinedID).collection('strangers').add({\r\n        //     channelID: combinedID\r\n        // });\r\n    }\r\n    return auth.currentUser && (\r\n        <div>\r\n            <button onClick={onClick}>Find a random person to chat with!</button>\r\n            <h1>Found: {foundUser}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FindNew;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Footer.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Profile.js",["91","92","93","94","95"],"import React, { useState, useEffect } from 'react'\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\n\r\nconst Profile = () => {\r\n    return auth.currentUser &&(\r\n        <div>\r\n            <h1>Name: {auth.currentUser.displayName}</h1>\r\n            <img src={auth.currentUser.photoURL} alt=\"User's profile picture\"/>\r\n            <p>Email: {auth.currentUser.email}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom.js",["96"],"import React , { useRef, useState } from 'react';\r\n\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport ChatMessage from './ChatMessage';\r\n\r\n\r\n\r\nfunction ChatRoom(){\r\n\r\n  const messagesRef = firestore.collection('posts');\r\n  const query = messagesRef.orderBy('createdAt').limitToLast(25);\r\n\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const { uid, photoURL } = auth.currentUser;\r\n\r\n    await messagesRef.add({\r\n      text: formValue,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n  }\r\n  return (<>\r\n    <main>\r\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n    </main>\r\n\r\n    <form onSubmit={sendMessage}>\r\n\r\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\r\n\r\n      <button type=\"submit\" disabled={!formValue}>🕊️</button>\r\n\r\n    </form>\r\n  </>)\r\n}\r\n\r\n\r\nexport default ChatRoom;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignIn.js",["97","98"],"import React, { useState } from 'react';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport 'firebase/auth';\r\n\r\nfunction SignIn() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n  \r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n    else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n\r\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n    event.preventDefault();\r\n    auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n      setError(\"Error signing in with password and email!\");\r\n      console.error(\"Error signing in with password and email\", error);\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n    <form className=\"\">\r\n      <label htmlFor=\"userEmail\" className=\"block\">\r\n        Email:\r\n        </label>\r\n      <input\r\n        type=\"email\"\r\n        className=\"my-1 p-1 w-full\"\r\n        name=\"userEmail\"\r\n        value={email}\r\n        placeholder=\"E.g: faruq123@gmail.com\"\r\n        id=\"userEmail\"\r\n        onChange={(event) => onChangeHandler(event)}\r\n      />\r\n      <label htmlFor=\"userPassword\" className=\"block\">\r\n        Password:\r\n        </label>\r\n      <input\r\n        type=\"password\"\r\n        className=\"mt-1 mb-3 p-1 w-full\"\r\n        name=\"userPassword\"\r\n        value={password}\r\n        placeholder=\"Your Password\"\r\n        id=\"userPassword\"\r\n        onChange={(event) => onChangeHandler(event)}\r\n      />\r\n      <button className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\" onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\r\n        Sign in\r\n        </button>\r\n    </form>\r\n\r\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default SignIn;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignOut.js",["99","100"],"import React from 'react';\r\n\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button onClick={() => auth.signOut()}>Sign Out</button>\r\n  )\r\n};\r\n\r\nexport default SignOut;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatMessage.js",["101","102","103","104","105"],"import React , { useRef, useState } from 'react';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\n\r\n\r\nfunction ChatMessage(props) {\r\n  const { text, uid, photoURL } = props.message;\r\n\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img src={photoURL} />\r\n      <p>{text}</p>\r\n    </div>\r\n  </>)\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignUp.js",["106"],"import React, { useState } from \"react\";\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\nimport firebase from '../Firebase.js';\r\n\r\n\r\nconst auth = firebase.auth();\r\nfirebase.auth().useEmulator('http://localhost:9099/');\r\n\r\nconst SignUp = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = (event, email, password, name) => {\r\n        event.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password);\r\n        \r\n        // .then((user)=>{\r\n        //     if(user){\r\n        //         user.updateProfile({\r\n        //             displayName: \"Jane Q. User\",\r\n        //             photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n        //         })\r\n        //     }}\r\n        // )\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setDisplayName(\"\");\r\n    };\r\n\r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n            setPassword(value);\r\n        } else if (name === \"displayName\") {\r\n            setDisplayName(value);\r\n        }\r\n    };\r\n    return (\r\n        <div className=\"mt-8\">\r\n            <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n            <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                {error !== null && (\r\n                    <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <form className=\"\">\r\n                    <label htmlFor=\"displayName\" className=\"block\">\r\n                        Display Name:\r\n          </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"my-1 p-1 w-full \"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder=\"E.g: Faruq\"\r\n                        id=\"displayName\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <label htmlFor=\"userEmail\" className=\"block\">\r\n                        Email:\r\n          </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"my-1 p-1 w-full\"\r\n                        name=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"E.g: faruq123@gmail.com\"\r\n                        id=\"userEmail\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <label htmlFor=\"userPassword\" className=\"block\">\r\n                        Password:\r\n          </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"mt-1 mb-3 p-1 w-full\"\r\n                        name=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Your Password\"\r\n                        id=\"userPassword\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <button\r\n                        className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n                        onClick={event => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password,displayName)\r\n                        }}\r\n                    >\r\n                        Sign up\r\n          </button>\r\n                </form>\r\n                <p className=\"text-center my-3\">or</p>\r\n                <button\r\n                    className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n                >\r\n                    Sign In with Google\r\n        </button>\r\n                <p className=\"text-center my-3\">\r\n                    Already have an account?{\" \"}\r\n                    <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n                        Sign in here\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default SignUp;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatPerson.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom2.js",["107"],"import React, { useRef, useState } from 'react';\r\nimport {withRouter} from 'react-router';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport ChatMessage from './ChatMessage';\r\n\r\n\r\nfunction ChatRoom2(props) {\r\n    console.log(\"render\");\r\n    const { channelid } = props.channelid;\r\n    const messagesRef = firestore.collection('messages').doc(channelid).collection('chats');\r\n    const query = messagesRef.orderBy('createdAt').limitToLast(25);\r\n\r\n    const [messages] = useCollectionData(query, { idField: 'id' });\r\n    const [formValue, setFormValue] = useState('');\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const { uid, photoURL } = auth.currentUser;\r\n\r\n        await messagesRef.add({\r\n            text: formValue,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        })\r\n\r\n        setFormValue('');\r\n    }\r\n    return (<>\r\n        <main>\r\n            {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n        </main>\r\n\r\n        <form onSubmit={sendMessage}>\r\n\r\n            <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\r\n\r\n            <button type=\"submit\" disabled={!formValue}>🕊️</button>\r\n\r\n        </form>\r\n    </>)\r\n}\r\n\r\n\r\nexport default withRouter(ChatRoom2);",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},{"ruleId":"112","severity":1,"message":"116","line":1,"column":25,"nodeType":"114","messageId":"115","endLine":1,"endColumn":33},{"ruleId":"112","severity":1,"message":"117","line":6,"column":3,"nodeType":"114","messageId":"115","endLine":6,"endColumn":7},{"ruleId":"112","severity":1,"message":"118","line":11,"column":8,"nodeType":"114","messageId":"115","endLine":11,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":11,"column":19,"nodeType":"114","messageId":"115","endLine":11,"endColumn":28},{"ruleId":"112","severity":1,"message":"120","line":13,"column":10,"nodeType":"114","messageId":"115","endLine":13,"endColumn":27},{"ruleId":"112","severity":1,"message":"121","line":19,"column":8,"nodeType":"114","messageId":"115","endLine":19,"endColumn":17},{"ruleId":"112","severity":1,"message":"122","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":27},{"ruleId":"112","severity":1,"message":"116","line":1,"column":29,"nodeType":"114","messageId":"115","endLine":1,"endColumn":37},{"ruleId":"112","severity":1,"message":"123","line":1,"column":39,"nodeType":"114","messageId":"115","endLine":1,"endColumn":48},{"ruleId":"112","severity":1,"message":"124","line":4,"column":22,"nodeType":"114","messageId":"115","endLine":4,"endColumn":28},{"ruleId":"112","severity":1,"message":"125","line":5,"column":5,"nodeType":"114","messageId":"115","endLine":5,"endColumn":11},{"ruleId":"112","severity":1,"message":"126","line":8,"column":5,"nodeType":"114","messageId":"115","endLine":8,"endColumn":14},{"ruleId":"112","severity":1,"message":"127","line":9,"column":5,"nodeType":"114","messageId":"115","endLine":9,"endColumn":18},{"ruleId":"112","severity":1,"message":"118","line":12,"column":8,"nodeType":"114","messageId":"115","endLine":12,"endColumn":16},{"ruleId":"112","severity":1,"message":"128","line":14,"column":8,"nodeType":"114","messageId":"115","endLine":14,"endColumn":18},{"ruleId":"112","severity":1,"message":"123","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"116","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"123","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"112","severity":1,"message":"118","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":2,"column":19,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"129","severity":1,"message":"130","line":8,"column":13,"nodeType":"131","endLine":8,"endColumn":80},{"ruleId":"112","severity":1,"message":"113","line":1,"column":18,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"119","line":2,"column":19,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"112","severity":1,"message":"132","line":8,"column":10,"nodeType":"114","messageId":"115","endLine":8,"endColumn":15},{"ruleId":"112","severity":1,"message":"118","line":3,"column":8,"nodeType":"114","messageId":"115","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":3,"column":19,"nodeType":"114","messageId":"115","endLine":3,"endColumn":28},{"ruleId":"112","severity":1,"message":"113","line":1,"column":18,"nodeType":"114","messageId":"115","endLine":1,"endColumn":24},{"ruleId":"112","severity":1,"message":"116","line":1,"column":26,"nodeType":"114","messageId":"115","endLine":1,"endColumn":34},{"ruleId":"112","severity":1,"message":"118","line":2,"column":8,"nodeType":"114","messageId":"115","endLine":2,"endColumn":16},{"ruleId":"112","severity":1,"message":"119","line":2,"column":19,"nodeType":"114","messageId":"115","endLine":2,"endColumn":28},{"ruleId":"133","severity":1,"message":"134","line":15,"column":7,"nodeType":"131","endLine":15,"endColumn":29},{"ruleId":"112","severity":1,"message":"135","line":15,"column":19,"nodeType":"114","messageId":"115","endLine":15,"endColumn":27},{"ruleId":"112","severity":1,"message":"113","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":23},"no-native-reassign",["136"],"no-negated-in-lhs",["137"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'useCollectionData' is defined but never used.","'ChatRoom2' is defined but never used.","'withRouter' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'ChatPerson' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setError' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]