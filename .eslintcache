[{"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\index.js":"1","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\App.js":"2","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\reportWebVitals.js":"3","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\Firebase.js":"4","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatList.js":"5","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\FindNew.js":"6","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Footer.js":"7","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Profile.js":"8","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom.js":"9","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignIn.js":"10","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignOut.js":"11","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatMessage.js":"12","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignUp.js":"13","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom2.js":"14","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatPerson.js":"15"},{"size":517,"mtime":1611630800090,"results":"16","hashOfConfig":"17"},{"size":2672,"mtime":1613715104288,"results":"18","hashOfConfig":"17"},{"size":375,"mtime":1610944178226,"results":"19","hashOfConfig":"17"},{"size":979,"mtime":1614105073902,"results":"20","hashOfConfig":"17"},{"size":1773,"mtime":1613716677336,"results":"21","hashOfConfig":"17"},{"size":2891,"mtime":1614042110188,"results":"22","hashOfConfig":"17"},{"size":803,"mtime":1613702297556,"results":"23","hashOfConfig":"17"},{"size":3110,"mtime":1613702843112,"results":"24","hashOfConfig":"17"},{"size":1819,"mtime":1613714268484,"results":"25","hashOfConfig":"17"},{"size":2453,"mtime":1613770739136,"results":"26","hashOfConfig":"17"},{"size":243,"mtime":1613340625249,"results":"27","hashOfConfig":"17"},{"size":959,"mtime":1613701196014,"results":"28","hashOfConfig":"17"},{"size":4420,"mtime":1613523782810,"results":"29","hashOfConfig":"17"},{"size":2805,"mtime":1614043403205,"results":"30","hashOfConfig":"17"},{"size":1957,"mtime":1611172748022,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hyjv0o",{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"34"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"34"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\index.js",[],["73","74"],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\App.js",["75","76","77","78","79","80"],"import React, { useRef, useState } from 'react';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n//import './App.css';\r\n\r\nimport firebase, { firestore, auth } from './Firebase.js';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\n\r\nimport ChatList from './components/ChatList.js';\r\nimport FindNew from './components/FindNew.js';\r\nimport Footer from './components/Footer.js';\r\nimport Profile from './components/Profile.js';\r\nimport ChatRoom2 from './components/ChatRoom2.js';\r\nimport SignOut from './components/SignOut.js';\r\nimport SignIn from './components/SignIn.js';\r\nimport SignUp from './components/SignUp.js';\r\nimport ChatRoom from './components/ChatRoom.js';\r\n\r\nfunction App() {\r\n  console.log('App rendered');\r\n  const [user] = useAuthState(auth);\r\n  const [roomNum, setRoomNum] = useState(\" \");\r\n  const callbackFunction = (childData) => {\r\n    setRoomNum(childData);\r\n    console.log(\"APP:\" + roomNum);\r\n  };\r\n  // const [roomNum, setRoomNum] = useState([]);\r\n\r\n  // const callbackFunction = (childData) => {\r\n  //     setRoomNum(childData);\r\n  // };\r\n  return (\r\n    <div className=\"App\">\r\n        <h1>‚öõÔ∏èüî•üí¨</h1>\r\n        <BrowserRouter className=\"navbar navbar-default\">\r\n          {user? <Footer className=\"\" /> : null}\r\n          <Switch>\r\n            <Route path=\"/profile\">\r\n              <Profile />\r\n            </Route>\r\n            <Route path=\"/new\">\r\n              <FindNew />\r\n            </Route>\r\n            <Route path=\"/signin\">\r\n              <SignIn />\r\n            </Route>\r\n            <Route path=\"/signup\">\r\n              <SignUp />\r\n            </Route>\r\n            {/* <Route path=\"/room\">\r\n            {user ? <ChatRoom /> : <SignIn auth={auth}/>}\r\n  </Route> */}\r\n\r\n            {/* {directRooms.map(channelid => <Route path={\"direct/\"+channelid}>\r\n            {user ? <div><ChatList parentCallback={callbackFunction}/> <ChatRoom2 channelid={channelid.channelID}/></div>  : <SignIn/>}\r\n          </Route>)} */}\r\n            <Route path=\"/direct\">\r\n              <ChatList parentCallback={callbackFunction} />\r\n              {roomNum === \" \" ? <h1 className = 'text-light'>Either click the left nav bar to chat with someone, or match with a new random</h1> : <ChatRoom2 channelid={roomNum} />}\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <ChatRoom />\r\n            </Route>\r\n\r\n          </Switch>\r\n        </BrowserRouter>\r\n\r\n      {/* <section>\r\n        {user ? <ChatRoom /> : <SignIn />}\r\n      </section> */}\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\reportWebVitals.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\Firebase.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatList.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94"],"import React, { withRouter, useState, useEffect } from 'react'\r\nimport \"./ChatList.css\"\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useParams,\r\n    useRouteMatch\r\n} from \"react-router-dom\";\r\n\r\nimport firebase, { firestore, auth } from '../Firebase.js';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport ChatPerson from './ChatPerson.js'\r\nimport ChatRoom2 from './ChatRoom2.js';\r\n\r\n\r\n\r\nconst ChatList = (props) => {\r\n    const currentuid = auth.currentUser ? auth.currentUser.uid : \" \";\r\n    console.log(\"list rendered\");\r\n    const query = firestore.collection('users').doc(currentuid).collection('strangers').orderBy('channelID');\r\n    //console.log(query);\r\n    const [channelidArr] = useCollectionData(query, { idField: 'id' });\r\n    //console.log(channelIDs);\r\n    // if(channelIDs)\r\n    //     console.log(channelIDs[0].channelID);\r\n\r\n    // const sendData = () => {\r\n    //     //props.parentCallback(channelid.channelID);\r\n    //     props.parentCallback( channelidArr)}\r\n\r\n\r\n    // const onClick = (roomID) => {\r\n    //     console.log(\"Clicked button\");\r\n    //     var chooseRoom = firebase.functions().httpsCallable('chooseRoom');\r\n    //     chooseRoom({ uid: auth.currentUser.uid, roomNum: roomID });\r\n    // }\r\n    return auth.currentUser && (\r\n        <div className = \"vertical-menu\">\r\n            {channelidArr && channelidArr.map(channelid =>\r\n                    <a key={channelid.channelID} onClick={()=>props.parentCallback(channelid.channelID)}>{channelid.ID}</a>\r\n                )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatList;\r\n\r\n{/* <Link to={\"/direct/\" + channelid.channelID} key={channelid}>\r\n                        {channelid.channelID}\r\n                    </Link> */}","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\FindNew.js",["95","96","97"],"import React, { useState, useEffect } from 'react'\r\nimport firebase, { firestore, auth } from '../Firebase.js';\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport axios from 'axios';\r\nimport {\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nconst FindNew = () => {\r\n    //firestore.collection('users')\r\n    const [foundUser, setFoundUser] = useState('no one');\r\n    const [userCount, setUserCount] = useState(0);\r\n    // const [existed, setExisted] = useState([]);\r\n    // if(auth.currentUser){\r\n    //     const currentUser = firestore.collection('users').doc(auth.currentUser.uid);\r\n    //     const strangerList = currentUser.collection('strangers');\r\n    //     currentUser.get().then(function (doc) {\r\n    //         const currentUserIndex = doc.data().userCount;\r\n    //         if(!existed.includes(currentUserIndex)){\r\n    //             setExisted(existed.push(currentUserIndex));\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n\r\n    const onClick = () => {\r\n        setFoundUser(\"Matching\");\r\n        const ref = firestore.collection('info').doc('userCount');\r\n        ref.get().then(function (doc) {\r\n            setUserCount(doc.data().userCount);\r\n        });\r\n        console.log(\"userCount \"+ userCount);\r\n        var randomIndex = Math.floor(Math.random() * userCount) + 1;  // returns a random integer from 1 to userCount\r\n        console.log(\"random: \"+ randomIndex);\r\n        const messagesRef = firestore.collection('users');\r\n        var query = messagesRef.where(\"userCount\", \"==\", randomIndex);\r\n        query.get().then(function (querySnapshot) {\r\n            querySnapshot.forEach(function (doc) {\r\n                var users = doc;\r\n                \r\n                setFoundUser(users.data().name);\r\n                var initConversation = firebase.functions().httpsCallable('initConversation');\r\n                axios.post(\"http://localhost:5001/chat-app-c0207/us-central1/initConversation\", {uidA: auth.currentUser.uid, uidB: users.id });\r\n                //initConversation({ uidA: auth.currentUser.uid, uidB: users.id });\r\n            });\r\n        });\r\n        // combinedID = uidA > uidB ? uidB+uidA : uidA+uidB\r\n        // firestore.collection('messages').doc(combinedID).collection('chats').add({\r\n        //     text: \"hi\",\r\n        //     createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n        //     uid: auth.currentUser.uid,\r\n        //     url: \"auth.currentUser.uid\"\r\n        // });\r\n\r\n        // firestore.collection('users').doc(combinedID).collection('strangers').add({\r\n        //     channelID: combinedID\r\n        // });\r\n    }\r\n    return auth.currentUser ? (\r\n        <div>\r\n            <button onClick={onClick}>Find a random person to chat with!</button>\r\n            <h1 className = 'text-light'>Found: {foundUser}</h1>\r\n        </div>\r\n    )  : <Redirect to='/signin'/>;\r\n};\r\n\r\nexport default FindNew;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Footer.js",[],"C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\Profile.js",["98","99","100","101","102","103"],"import { user } from 'firebase-functions/lib/providers/auth';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useDocumentOnce } from 'react-firebase-hooks/firestore';\r\nimport {\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport firebase, { firestore, auth, storage } from '../Firebase.js';\r\nimport SignOut from './SignOut'\r\nimport './Profile.css'\r\n\r\nconst Profile = () => {\r\n    // var info = \"\";\r\n\r\n    // if(auth.currentUser){\r\n    //     firestore.collection('users').doc(auth.currentUser.uid).get().then(function(doc){\r\n    //         info = doc.data().info;\r\n    //     }).catch(function(err){\r\n    //         console.log(\"Error getting document:\", err);\r\n    //     });\r\n    //     //setUserName(auth.currentUser.displayName);\r\n    //     //setUserName(auth.currentUser.photoURL);\r\n    // }\r\n\r\n    const [userName, setUserName] = useState(\"\");\r\n    // const [userInfo, setUserInfo] = useState(\"\");\r\n    const [userPhotoURL, setUserPhotoURL] = useState(\"\");\r\n    \r\n\r\n\r\n\r\n    const onNameUpdate = () => {\r\n        auth.currentUser.updateProfile({\r\n            displayName: userName,\r\n        });\r\n        firestore.collection('users').doc(auth.currentUser.uid).set({\r\n            name: userName,\r\n        }, {merge : true});\r\n    }\r\n    const onPhotoUpdate = () => {\r\n        auth.currentUser.updateProfile({\r\n            photoURL: userPhotoURL,\r\n        });\r\n        firestore.collection('users').doc(auth.currentUser.uid).set({\r\n            photoURL: userPhotoURL,\r\n        }, {merge : true});\r\n    }\r\n    // const onInfoUpdate = async () => {\r\n    //     // auth.currentUser.updateProfile({\r\n    //     //     phoneNumber: userInfo,\r\n    //     // });\r\n    //     firestore.collection('users').doc(auth.currentUser.uid).set({\r\n    //         info: userInfo\r\n    //     } , {merge : true});\r\n    // }\r\n    return auth.currentUser ? (\r\n        <div className = 'justify-content-center'>\r\n            <img className = 'profileimg mb-4 mt-4' src={auth.currentUser.photoURL} alt=\"User's profile picture\" />\r\n            <h2 className = \"text-light\">{auth.currentUser.displayName}</h2>\r\n            <p className = \"text-light\">Your email: {auth.currentUser.email}</p>\r\n            {/* <p>About: {userPhotoURL}</p> */}\r\n            <form onSubmit={() => onPhotoUpdate()}>\r\n                <input type=\"text\" value={userPhotoURL} onChange={(event) => { setUserPhotoURL(event.target.value)}}/>\r\n                <button type=\"submit\">Upload Profile Picture</button>\r\n            </form>\r\n            <form onSubmit={() => onNameUpdate()}>\r\n                <input type=\"text\" value={userName} onChange={(event) => { setUserName(event.target.value) }} />\r\n                <button type=\"submit\">Save Display Name</button>\r\n            </form>\r\n            {/* <form onSubmit={() => onInfoUpdate()}>\r\n                <input type=\"text\" value={userInfo} onChange={(event) => { setUserInfo(event.target.value) }} />\r\n                <button type=\"submit\">Edit Bio</button>\r\n            </form> */}\r\n            <SignOut/>\r\n        </div>\r\n    )  : <Redirect to='/signin'/>;\r\n};\r\n\r\nexport default Profile;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom.js",["104"],"import React , { useRef, useState } from 'react';\r\nimport {\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport ChatMessage from './ChatMessage.js';\r\n\r\n\r\n\r\nfunction ChatRoom(){\r\n  var encrypt = firebase.functions().httpsCallable('encrypt');\r\n\r\n  //const decrypt = firebase.functions().httpsCallable('decrypt');\r\n  const messagesRef = firestore.collection('posts');\r\n  const query = messagesRef.orderBy('createdAt').limitToLast(25);\r\n  const [messages] = useCollectionData(query, { idField: 'id' });\r\n  const [formValue, setFormValue] = useState('');\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const { uid, photoURL } = auth.currentUser;\r\n    //var sanitizedMessage = \"\";\r\n    // encrypt({msg: formValue}).then((result) => {\r\n    //   // Read result of the Cloud Function.\r\n    //   sanitizedMessage = result.data.ciphertext;\r\n    //   console.log(\"write: \" + sanitizedMessage)\r\n    // }); \r\n    await messagesRef.add({\r\n      text: (await encrypt({msg: formValue})).data.ciphertext, //sanitizedMessage,\r\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n      uid,\r\n      photoURL\r\n    })\r\n\r\n    setFormValue('');\r\n  }\r\n  \r\n  return auth.currentUser ? (<>\r\n    <main className = 'chatmain'>\r\n      {messages && messages.map(m => <ChatMessage key={m.id} message={m}/>)}\r\n    </main>\r\n\r\n    <form className = 'chatform' onSubmit={sendMessage}>\r\n\r\n      <input className = 'chatinput' value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type here!\" />\r\n\r\n      <button className = 'sendbutton' type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\r\n\r\n    </form>\r\n  </>) : <Redirect to='/signin'/>;\r\n}\r\n\r\n\r\nexport default ChatRoom;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignIn.js",["105","106"],"import React, { useState } from 'react';\r\nimport firebase, { firestore, auth } from '../Firebase.js';\r\nimport 'firebase/auth';\r\nimport {\r\n  Link, Switch, Route, Redirect\r\n} from \"react-router-dom\";\r\nimport SignUp from './SignUp.js';\r\nfunction SignIn() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const onChangeHandler = (event) => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (name === 'userEmail') {\r\n      setEmail(value);\r\n    }\r\n    else if (name === 'userPassword') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n\r\n  const signInWithGoogle = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    auth.signInWithPopup(provider);\r\n  };\r\n\r\n\r\n  const signInWithEmailAndPasswordHandler = (event, email, password) => {\r\n    event.preventDefault();\r\n    auth.signInWithEmailAndPassword(email, password).catch(error => {\r\n      setError(\"Error signing in with password and email!\");\r\n      console.error(\"Error signing in with password and email\", error);\r\n    });\r\n  };\r\n\r\n\r\n  return !auth.currentUser ? (\r\n    <div>\r\n      <form className=\"\">\r\n        <label htmlFor=\"userEmail\" className=\"block\">\r\n          Email:\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"my-1 p-1 w-full\"\r\n          name=\"userEmail\"\r\n          value={email}\r\n          placeholder=\"E.g: faruq123@gmail.com\"\r\n          id=\"userEmail\"\r\n          onChange={(event) => onChangeHandler(event)}\r\n        />\r\n        <label htmlFor=\"userPassword\" className=\"block\">\r\n          Password:\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"mt-1 mb-3 p-1 w-full\"\r\n          name=\"userPassword\"\r\n          value={password}\r\n          placeholder=\"Your Password\"\r\n          id=\"userPassword\"\r\n          onChange={(event) => onChangeHandler(event)}\r\n        />\r\n        <button className=\"bg-green-400 hover:bg-green-500 w-full py-2\" onClick={(event) => { signInWithEmailAndPasswordHandler(event, email, password) }}>\r\n          Sign in\r\n        </button>\r\n      </form>\r\n      <p>or</p>\r\n      <button onClick={signInWithGoogle}>Sign in with Google</button>\r\n      <Link to={\"/signup\"}>Or you can sign up here</Link>\r\n      <Switch>\r\n        <Route path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  ) : <Redirect to='/'/>;\r\n};\r\n\r\nexport default SignIn;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignOut.js",["107","108"],"import React from 'react';\r\n\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\n\r\nfunction SignOut() {\r\n  return auth.currentUser && (\r\n    <button onClick={() => {auth.signOut()}}>Sign Out</button>\r\n  )\r\n};\r\n\r\nexport default SignOut;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatMessage.js",["109","110","111"],"import React , { useRef, useState } from 'react';\r\nimport firebase, {firestore, auth} from '../Firebase.js';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport 'firebase/analytics';\r\nimport './ChatMessage.css';\r\n\r\n\r\nfunction ChatMessage(props) {\r\n  var { text, uid, photoURL } = props.message;\r\n  const [originalText, setOriginalText] = useState(\"\");\r\n  const decrypt = firebase.functions().httpsCallable('decrypt');\r\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\r\n  //text = (await decrypt({msg: text})).data.originalText;\r\n  decrypt({msg: text}).then((result) => {\r\n    // Read result of the Cloud Function.\r\n    console.log(\"read: \" + result.data.originalText);\r\n    setOriginalText(result.data.originalText);\r\n  });\r\n  return (<>\r\n    <div className={`message ${messageClass}`}>\r\n      <img className='chatimg' src={photoURL} />\r\n      <p>{originalText}</p>\r\n    </div>\r\n  </>)\r\n};\r\n\r\nexport default ChatMessage;\r\n","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\SignUp.js",["112"],"import React, { useState } from \"react\";\r\nimport {\r\n    Link, Redirect\r\n} from \"react-router-dom\";\r\nimport firebase from '../Firebase.js';\r\n\r\n\r\nconst auth = firebase.auth();\r\nfirebase.auth().useEmulator('http://localhost:9099/');\r\n\r\nconst SignUp = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [displayName, setDisplayName] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n\r\n    const createUserWithEmailAndPasswordHandler = (event, email, password, name) => {\r\n        event.preventDefault();\r\n        auth.createUserWithEmailAndPassword(email, password);\r\n\r\n        // .then((user)=>{\r\n        //     if(user){\r\n        //         user.updateProfile({\r\n        //             displayName: \"Jane Q. User\",\r\n        //             photoURL: \"https://example.com/jane-q-user/profile.jpg\"\r\n        //         })\r\n        //     }}\r\n        // )\r\n        setEmail(\"\");\r\n        setPassword(\"\");\r\n        setDisplayName(\"\");\r\n    };\r\n\r\n    const onChangeHandler = event => {\r\n        const { name, value } = event.currentTarget;\r\n        if (name === \"userEmail\") {\r\n            setEmail(value);\r\n        } else if (name === \"userPassword\") {\r\n            setPassword(value);\r\n        } else if (name === \"displayName\") {\r\n            setDisplayName(value);\r\n        }\r\n    };\r\n    return !auth.currentUser ? (\r\n        <div className=\"mt-8\">\r\n            <h1 className=\"text-3xl mb-2 text-center font-bold\">Sign Up</h1>\r\n            <div className=\"border border-blue-400 mx-auto w-11/12 md:w-2/4 rounded py-8 px-4 md:px-8\">\r\n                {error !== null && (\r\n                    <div className=\"py-4 bg-red-600 w-full text-white text-center mb-3\">\r\n                        {error}\r\n                    </div>\r\n                )}\r\n                <form className=\"\">\r\n                    <label htmlFor=\"displayName\" className=\"block\">\r\n                        Display Name:\r\n          </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"my-1 p-1 w-full \"\r\n                        name=\"displayName\"\r\n                        value={displayName}\r\n                        placeholder=\"E.g: Faruq\"\r\n                        id=\"displayName\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <label htmlFor=\"userEmail\" className=\"block\">\r\n                        Email:\r\n          </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"my-1 p-1 w-full\"\r\n                        name=\"userEmail\"\r\n                        value={email}\r\n                        placeholder=\"E.g: faruq123@gmail.com\"\r\n                        id=\"userEmail\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <label htmlFor=\"userPassword\" className=\"block\">\r\n                        Password:\r\n          </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        className=\"mt-1 mb-3 p-1 w-full\"\r\n                        name=\"userPassword\"\r\n                        value={password}\r\n                        placeholder=\"Your Password\"\r\n                        id=\"userPassword\"\r\n                        onChange={event => onChangeHandler(event)}\r\n                    />\r\n                    <button\r\n                        className=\"bg-green-400 hover:bg-green-500 w-full py-2 text-white\"\r\n                        onClick={event => {\r\n                            createUserWithEmailAndPasswordHandler(event, email, password, displayName)\r\n                        }}\r\n                    >\r\n                        Sign up\r\n          </button>\r\n                </form>\r\n                <p className=\"text-center my-3\">or</p>\r\n                <button\r\n                    className=\"bg-red-500 hover:bg-red-600 w-full py-2 text-white\"\r\n                >\r\n                    Sign In with Google\r\n        </button>\r\n                <p className=\"text-center my-3\">\r\n                    Already have an account?{\" \"}\r\n                    <Link to=\"/\" className=\"text-blue-500 hover:text-blue-600\">\r\n                        Sign in here\r\n                    </Link>\r\n                </p>\r\n            </div>\r\n        </div>\r\n    ) : <Redirect to='/'/>;\r\n};\r\nexport default SignUp;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatRoom2.js",["113","114","115","116","117","118","119","120","121"],"import React, { useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { useCollectionData, useDocument, useDocumentData } from 'react-firebase-hooks/firestore';\r\nimport firebase, { firestore, auth } from '../Firebase.js';\r\nimport ChatMessage from './ChatMessage';\r\nimport { _onRequestWithOptions } from 'firebase-functions/lib/providers/https';\r\nimport './ChatRoom2.css';\r\n\r\nconst ChatRoom2 = (props) => {\r\n    var encrypt = firebase.functions().httpsCallable('encrypt');\r\n    console.log(\"chat room rendered\");\r\n    var decrypt = firebase.functions().httpsCallable('decrypt');\r\n\r\n    function saveQuery() {\r\n        const channelid = props.channelid;\r\n        const messagesRef = firestore.collection('messages').doc(channelid).collection('chats');\r\n        const query = messagesRef.orderBy('createdAt').limitToLast(25);\r\n        return [messagesRef, query];\r\n    }\r\n\r\n    const [messagesRef, query] = useMemo(() => saveQuery(), [props.channelid]);\r\n    const [messages] = useCollectionData(query, { idField: 'id' });\r\n    const [formValue, setFormValue] = useState('');\r\n    const [quit, setQuit] = useState('');\r\n    //const [value, loading, error] = useDocument(firestore.collection('messages').doc(props.channelid));\r\n    //const profile = value.data().profile;\r\n    //const [profile, showProfile] = useState(\"\");\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        console.log(messagesRef);\r\n        console.log(query);\r\n        console.log(messages);\r\n\r\n        const { uid, photoURL } = auth.currentUser;\r\n\r\n        await messagesRef.add({\r\n            text: (await encrypt({ msg: formValue })).data.ciphertext,\r\n            createdAt: firebase.firestore.FieldValue.serverTimestamp(),\r\n            uid,\r\n            photoURL\r\n        })\r\n\r\n        setFormValue('');\r\n    }\r\n\r\n    const onQuit = () => {\r\n        setQuit('quit');\r\n    }\r\n    const onProfileRequest = () => {\r\n        firestore.collection('messages').doc(props.channelid).set({\r\n            profile: \"yes\",\r\n        })\r\n    }\r\n    return auth.currentUser ? (<div>\r\n        <main className = 'chatmain2'>\r\n            {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\r\n        </main>\r\n\r\n        <form className = 'chatform' onSubmit={sendMessage}>\r\n\r\n            <input className = 'chatinput' value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"Type here!\" />\r\n\r\n            <button className = 'sendbutton' type=\"submit\" disabled={!formValue}>üïäÔ∏è</button>\r\n\r\n        </form>\r\n\r\n\r\n        {/* <button onClick={()=>onQuit()}>Quit</button>\r\n        <button onClick={()=>onProfileRequest()}>Request Profile</button> */}\r\n    </div>)  : <Redirect to='/signin'/>;\r\n}\r\n\r\n\r\nexport default ChatRoom2;","C:\\Users\\Jimmy\\ReactProjects\\chatapp_versions\\chatapp_cloud_functions\\src\\components\\ChatPerson.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":23},{"ruleId":"126","severity":1,"message":"130","line":7,"column":3,"nodeType":"128","messageId":"129","endLine":7,"endColumn":7},{"ruleId":"126","severity":1,"message":"131","line":12,"column":8,"nodeType":"128","messageId":"129","endLine":12,"endColumn":16},{"ruleId":"126","severity":1,"message":"132","line":12,"column":20,"nodeType":"128","messageId":"129","endLine":12,"endColumn":29},{"ruleId":"126","severity":1,"message":"133","line":14,"column":10,"nodeType":"128","messageId":"129","endLine":14,"endColumn":27},{"ruleId":"126","severity":1,"message":"134","line":21,"column":8,"nodeType":"128","messageId":"129","endLine":21,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":27},{"ruleId":"126","severity":1,"message":"136","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":37},{"ruleId":"126","severity":1,"message":"137","line":1,"column":39,"nodeType":"128","messageId":"129","endLine":1,"endColumn":48},{"ruleId":"126","severity":1,"message":"138","line":4,"column":22,"nodeType":"128","messageId":"129","endLine":4,"endColumn":28},{"ruleId":"126","severity":1,"message":"139","line":5,"column":5,"nodeType":"128","messageId":"129","endLine":5,"endColumn":11},{"ruleId":"126","severity":1,"message":"140","line":6,"column":5,"nodeType":"128","messageId":"129","endLine":6,"endColumn":10},{"ruleId":"126","severity":1,"message":"130","line":7,"column":5,"nodeType":"128","messageId":"129","endLine":7,"endColumn":9},{"ruleId":"126","severity":1,"message":"141","line":8,"column":5,"nodeType":"128","messageId":"129","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"142","line":9,"column":5,"nodeType":"128","messageId":"129","endLine":9,"endColumn":18},{"ruleId":"126","severity":1,"message":"131","line":12,"column":8,"nodeType":"128","messageId":"129","endLine":12,"endColumn":16},{"ruleId":"126","severity":1,"message":"143","line":14,"column":8,"nodeType":"128","messageId":"129","endLine":14,"endColumn":18},{"ruleId":"126","severity":1,"message":"144","line":15,"column":8,"nodeType":"128","messageId":"129","endLine":15,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":42,"column":21,"nodeType":"147","endLine":42,"endColumn":106},{"ruleId":"148","severity":1,"message":"149","line":50,"column":1,"nodeType":"150","messageId":"151","endLine":52,"endColumn":32},{"ruleId":"126","severity":1,"message":"137","line":1,"column":27,"nodeType":"128","messageId":"129","endLine":1,"endColumn":36},{"ruleId":"126","severity":1,"message":"133","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":27},{"ruleId":"126","severity":1,"message":"152","line":42,"column":21,"nodeType":"128","messageId":"129","endLine":42,"endColumn":37},{"ruleId":"126","severity":1,"message":"153","line":1,"column":10,"nodeType":"128","messageId":"129","endLine":1,"endColumn":14},{"ruleId":"126","severity":1,"message":"137","line":2,"column":27,"nodeType":"128","messageId":"129","endLine":2,"endColumn":36},{"ruleId":"126","severity":1,"message":"154","line":3,"column":10,"nodeType":"128","messageId":"129","endLine":3,"endColumn":25},{"ruleId":"126","severity":1,"message":"131","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":16},{"ruleId":"126","severity":1,"message":"155","line":7,"column":37,"nodeType":"128","messageId":"129","endLine":7,"endColumn":44},{"ruleId":"156","severity":1,"message":"157","line":57,"column":13,"nodeType":"147","endLine":57,"endColumn":116},{"ruleId":"126","severity":1,"message":"127","line":1,"column":18,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"132","line":2,"column":20,"nodeType":"128","messageId":"129","endLine":2,"endColumn":29},{"ruleId":"126","severity":1,"message":"158","line":11,"column":10,"nodeType":"128","messageId":"129","endLine":11,"endColumn":15},{"ruleId":"126","severity":1,"message":"131","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":16},{"ruleId":"126","severity":1,"message":"132","line":3,"column":19,"nodeType":"128","messageId":"129","endLine":3,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":1,"column":18,"nodeType":"128","messageId":"129","endLine":1,"endColumn":24},{"ruleId":"126","severity":1,"message":"132","line":2,"column":19,"nodeType":"128","messageId":"129","endLine":2,"endColumn":28},{"ruleId":"159","severity":1,"message":"160","line":22,"column":7,"nodeType":"147","endLine":22,"endColumn":49},{"ruleId":"126","severity":1,"message":"161","line":15,"column":19,"nodeType":"128","messageId":"129","endLine":15,"endColumn":27},{"ruleId":"126","severity":1,"message":"127","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":32},{"ruleId":"126","severity":1,"message":"162","line":5,"column":29,"nodeType":"128","messageId":"129","endLine":5,"endColumn":40},{"ruleId":"126","severity":1,"message":"163","line":5,"column":42,"nodeType":"128","messageId":"129","endLine":5,"endColumn":57},{"ruleId":"126","severity":1,"message":"164","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":31},{"ruleId":"126","severity":1,"message":"165","line":14,"column":9,"nodeType":"128","messageId":"129","endLine":14,"endColumn":16},{"ruleId":"166","severity":1,"message":"167","line":23,"column":61,"nodeType":"168","endLine":23,"endColumn":78,"suggestions":"169"},{"ruleId":"126","severity":1,"message":"170","line":26,"column":12,"nodeType":"128","messageId":"129","endLine":26,"endColumn":16},{"ruleId":"126","severity":1,"message":"171","line":50,"column":11,"nodeType":"128","messageId":"129","endLine":50,"endColumn":17},{"ruleId":"126","severity":1,"message":"172","line":53,"column":11,"nodeType":"128","messageId":"129","endLine":53,"endColumn":27},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'firebase' is defined but never used.","'firestore' is defined but never used.","'useCollectionData' is defined but never used.","'SignOut' is defined but never used.","'withRouter' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","'ChatPerson' is defined but never used.","'ChatRoom2' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'initConversation' is assigned a value but never used.","'user' is defined but never used.","'useDocumentOnce' is defined but never used.","'storage' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don‚Äôt need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'error' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'setError' is assigned a value but never used.","'useDocument' is defined but never used.","'useDocumentData' is defined but never used.","'_onRequestWithOptions' is defined but never used.","'decrypt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'saveQuery'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'quit' is assigned a value but never used.","'onQuit' is assigned a value but never used.","'onProfileRequest' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},"Update the dependencies array to be: [saveQuery]",{"range":"178","text":"179"},[981,998],"[saveQuery]"]